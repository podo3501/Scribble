틈나는대로 noexcept, const, constexpr 키워드 쓰기

--void CMainLoop::UpdateRenderItems()에서 cube world값을 안 넣어주고 있다.
--instance 버퍼에 인덱스문제가 있다.
--cubemap 붙이기
--renderitem과 geometry구조가 맞지 않다.
--일단  renderItem을 NRenderItem으로 계층구조가 있는 스트럭쳐로 바꾼다
--그다음 gpu에 올릴 버퍼를 NRenderItem쪽으로 이동한다. 
--그리고 geometry와 renderitem을 삭제한다.
--데이터들 + instance정보 => renderItem 해서 renderer에 renderItem으로 랜더링 하게끔 한다.
--랜더링에 의존적이지 않게 interface 를 만들어서 연결한다.
--추후에 draw함수 테스트 할때 가짜 interface 클래스를 생성해서 연결하면 Draw함수도 테스트 가능하다.
--directx3d를 외부에서 안 보이게 하는중
--draw호출을 반대로 한다.
--Renderer를 코어로 옮긴다.
--SetUploadBuffer로 수정하고 frameResource를 renderer로 넣는다.
--ModelTypeList와 instance클래스를 합친다.
--instance 클래스에 texture 파일 목록을 넣는다.
--EXPECT_EQ(m_instance->LoadModel(model.get()), true); 여기서 데이터를 넣으면 나중에 FillRenderItems를 따로 부를 이유가 없다.
--material을 instance 클래스에 material 목록을 넣는다.
--texture 클래스를 renderer에 넣는다.
--winproc을 윈도우로 옮기고 관련 변수들 정리 한다.
--m_camFrustum을 카메라에 넣음
--window를 core에서 꺼낸다.
--utility를 core용과 다른 것으로 분리한다. 그래서 core에 바로 include 하는 것이 없도록 한다.
--컬링 부분을 카메라 클래스에 옮긴다.
--UpdateMainPassCB() 에서 빛 데이터를 setupdata클래스에 넣는다.
--업데이트 부분에 materialIndex, diffuseIndex를 조정해야 한다.
--새로운 메쉬를 만들때 같은 텍스춰를 사용한다면 머터리얼 인덱스와 텍스춰 인덱스가 달라지게 된다.
--현재의 문제는 새로운 메쉬를 만들때 쓰는 텍스춰가 같은 텍스춰이기 때문이고, 해야할 것은 가짜 데이터를 
--만들어서 텍스춰 인덱스를 맞추는 것이다.
--인스턴스 안에 있는 머터리얼 인덱스는 인스턴스가 매프레임 갱신되기 때문에 머터리얼이 달라지더라도 
--다시 인덱싱 하면 되기때문에 괜찮다. diffuseIndex는(텍스춰들) 실제로 메모리상에 올라가 있는 순서가 있기
--때문에 새로운 인덱싱을 할수 없다. 그래서 sort가 안되는 vector로 수정한다.
--현재 3가지의 가짜 데이터가 합쳐지는 형식인데 이것을 하나의 스트럭쳐로 만들어서 로딩하는 방식으로 바꾼다.
--판 띄운다.
--테스트 코드가 메인 코드와 엮이는 것이 없어야 한다.
--geo별로 데이터가 있을 경우에 랜더링 하게끔 수정한다.(쉐이더 파일 목록 관련도 수정해야 한다.)
--기둥 세운다.
--그래픽 파이프 라인이 안 만들어졌을때에는 메쉬가 안 올라가도록 만든다.(그럴경우 에러가 나오게끔 처리)
--노멀맵 쉐이더 작성한다.
--using enum 을 쓸 경우 count나 init, none 같은 것들이 겹칠수 있기 때문에 이 것을 지양하는 방식으로 프로그래밍한다.
--개별적으로 랜더링 하는 부분 버그. pso는 준비되었는데 데이터가 오지 않으면 false를 반환한다. 엔진보다 더 많은 데이터가
--있는 경우는 버그가 아니고 그냥 그 자료는 무시한다. 준비되었는데 로딩시 잘못되면 false를 반환한다.
--normal map 적용한다.
--반사 적용한다.
--shadowmap이나 cubemap은 한번씩 밖에 안나오기 때문에 인덱스를 쉐이더의 순열로 픽스한다.
--일반적인 텍스춰는 시작 인덱스를 가져와서 나중에 셋팅하는 방식으로 간다.
--shadow map 적용
--ssao 적용
--캐릭터를 붙인다.
--출력창에 나오는 directx 오류 수정

rtv srv dsv 인덱스 문제 정리 
엔진 리팩토링
쉐이더 코드drawnormal을 shader ssao에서 뺀다.
mathhelper를 core랑 app에서 쓸수 있게 한다.
mesh안에 일반적 mesh와 skinned mesh를 사용하게끔 수정한다.
material을 먼저 설정해주는 부분을 뒤로 설정하게 변경한다. 

direct3D와 renderer가 꼬여 있다.




